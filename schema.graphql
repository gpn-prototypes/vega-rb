type Attribute {
  """Кодовое обозначение подсчётного параметра"""
  code: String!

  """Имя подсчётного параметра"""
  name: String!

  """Сокращенное имя или обозначение подсчётного параметра"""
  shortName: String!

  """Единицы измерения подсчётного параметра"""
  units: String!
}

input AttributeInput {
  """Кодовое обозначение подсчётного параметра"""
  code: String!

  """Имя подсчётного параметра"""
  name: String!

  """Сокращенное имя или обозначение подсчётного параметра"""
  shortName: String!

  """Единицы измерения подсчётного параметра"""
  units: String!
}

type CalculationOk {
  """
  Архив с результатом вычислений. Доступен по url /calculation_result/<resultId>
  """
  resultId: ID
}

union CalculationResult = TableErrors | CalculationOk | DistributionDefinitionErrors

"""Ошибка с дополнительной информацией."""
type DetailError implements ErrorInterface {
  """Код ошибки, соответствующий человекочитаемому сообщению об ошибке"""
  code: ErrorCodes!

  """
  Сообщение об ошибке. Отображается в случае отсутствия соответствующего коду человекочитаемого сообщения на клиенте
  """
  message: String!

  """Детальная информация об ошибке"""
  details: String
}

"""Результаты вычисления заданного распределения."""
type DistributionChart {
  """График функции плотности распределения"""
  pdf: [Point!]!

  """Функция надежности (1 - cdf)"""
  sf: [Point!]!

  """Точки процентилей"""
  percentiles: [Percentile!]!
}

union DistributionChartResult = DistributionChart | DistributionDefinitionErrors

"""Ошибка задания распределения."""
type DistributionDefinitionError implements ErrorInterface {
  """Код ошибки, соответствующий человекочитаемому сообщению об ошибке"""
  code: ErrorCodes!

  """
  Сообщение об ошибке. Отображается в случае отсутствия соответствующего коду человекочитаемого сообщения на клиенте
  """
  message: String!

  """Список параметров задания распределения, к которым относится ошибка"""
  fields: [String!]!
}

"""Список ошибок задания распределения."""
type DistributionDefinitionErrors {
  errors: [DistributionDefinitionError!]!
}

"""Способы задания распределений."""
enum DistributionDefinitionTypes {
  """Через среднее и стандартное отклонение"""
  MEAN_SD

  """Через минимум и максимум"""
  MIN_MAX
}

  """
  Через расположение, логарифмическое среднее и логарифмическое стандартное отклонение
  """
  LOCATION_MEANLOG_SDLOG

  """Через наиболее вероятное, минимум и максимум"""
  MODE_MIN_MAX
}

"""Параметры распределения."""
input DistributionInput {
  """Тип распределения"""
  type: DistributionTypes!

  """Способ задания распределения"""
  definition: DistributionDefinitionTypes!

  """Параметры распределения"""
  parameters: [DistributionParameterInput]!
}

"""Параметр способа задания распределения."""
input DistributionParameterInput {
  """Тип параметра распределения"""
  type: DistributionParameterTypes!
  value: Float!
}

"""Тип параметра задания распределения."""
enum DistributionParameterTypes {
  """Среднее"""
  MEAN

  """Стандартное отклонение"""
  STANDARD_DEVIATION

  """Мин."""
  MIN

  """Макс."""
  MAX

  """Расположение"""
  LOCATION

  """Наиболее вероятное"""
  MODE

  """Логарифмическое среднее"""
  MEANLOG

  """Логарифмическое стандартное отклонение"""
  SDLOG
}

"""Пространство имен для работы с распределениями."""
type DistributionQueries {
  """Результат вычисления значения распределения"""
  distributionChart(distribution: DistributionInput!): DistributionChartResult
}

"""Типы распределений."""
enum DistributionTypes {
  """Нормальное распределение"""
  NORMAL

  """Логнормальное распределение"""
  LOGNORMAL

  """Треугольное распределение"""
  TRIANGULAR

  """Равномерное распределение"""
  UNIFORM
}

type DomainEntity {
  """Имя доменной сущности геологического объекта"""
  name: String!

  """Иконка доменной сущности геологического объекта"""
  icon: DomainEntityIcons!
}

"""Список иконок доменной сущности геологического объекта."""
enum DomainEntityIcons {
  LICENSING_ROUND_ICON
  FIELD_ICON
  FORMATION_ICON
  OIL_POOL_ICON
  WELL_ICON
}

input DomainEntityInput {
  """Имя доменной сущности геологического объекта"""
  name: String!

  """Иконка доменной сущности геологического объекта"""
  icon: DomainEntityIcons!
}

"""Геологический объект структуры проекта."""
input DomainObjectInput {
  """Иерархия геологического объекта в структуре проекта"""
  domainObjectPath: [String!]!

  """Категория геологического объекта"""
  geoObjectCategory: GeoObjectCategories!

  """Список значений атрибутов геологического объекта"""
  attributeValues: [DistributionInput]!

  """Список значений рисков геологического объекта"""
  risksValues: [Float]!
}

"""Список кодов ошибок приложения."""
enum ErrorCodes {
  """Ошибка в загружаемой структуре"""
  INCORRECT_PROJECT_STRUCTURE

  """В строке данных таблицы структуры не может быть пустых ячеек"""
  EMPTY_CELL_IN_TABLE_DATA

  """В таблице структуры не может быть одинаковых строк"""
  IDENTICAL_ROW_IN_TABLE_DATA

  """Версия импортируемого файла не соответствует версии шаблона структуры"""
  INCORRECT_FILE_VERSION

  """Некорректная зависимость параметров распределения"""
  DISTRIBUTION_PARAMETERS_INCORRECT_RELATION

  """Параметр распределения выходит за границы допустимых значений"""
  DISTRIBUTION_PARAMETER_OUT_OF_RANGE

  """Для старта расчётов заполните ячейку таблицы"""
  CELL_VALUE_IS_NULL

  """Вероятность может иметь значение в пределах от 0.0 до 1.0"""
  INVALID_PROBABILITY_VALUE
}

"""Интерфейс ошибок, отображаемых пользователю."""
interface ErrorInterface {
  """Код ошибки, соответствующий человекочитаемому сообщению об ошибке"""
  code: ErrorCodes!

  """
  Сообщение об ошибке. Отображается в случае отсутствия соответствующего коду человекочитаемого сообщения на клиенте
  """
  message: String!
}

type GCoSCalculationResult {
  """Список значений GCoS геологических объектов"""
  GCoSValues: [Float]
  errors: [TableError!]
}

"""Список категроий геологического объекта."""
enum GeoObjectCategories {
  RESERVES
  RESOURCES
}

type Mutation {
  updateRiskValue(projectStructure: ProjectStructureInput!): UpdateRiskValueResult
  calculateProject(projectStructureInput: ProjectStructureInput!): CalculationResult
}

"""Точка на графике."""
type Percentile {
  point: Point!

  """Процентильный ранг (1-99)"""
  rank: Int!
}

"""Точка на графике."""
type Point {
  x: Float!
  y: Float!
}

"""Представление проекта."""
type Project {
  """Версия шаблона структуры проекта"""
  version: String!

  """Структура проекта"""
  structure: ProjectStructure!
}

"""Представление проекта."""
input ProjectInput {
  """Версия шаблона структуры проекта"""
  version: String!

  """Структура проекта"""
  structure: ProjectStructureInput!
}

"""Пространство имен для работы с проектом."""
type ProjectQueries {
  """Шаблон структуры проекта"""
  template: Project

  """Валидация структуры проекта перед импортом/экспортом"""
  validateBeforeLoad(project: ProjectInput!): DetailError
}

"""Структура проекта."""
type ProjectStructure {
  """Список доменных сущностей геологических объектов"""
  domainEntities: [DomainEntity!]!

  """Список подсчетных параметров"""
  attributes: [Attribute!]!

  """Список рисков геологических объектов"""
  risks: [Risk!]!
}

input ProjectStructureInput {
  """Список доменных сущностей геологических объектов"""
  domainEntities: [DomainEntityInput!]!

  """Список подсчетных параметров"""
  attributes: [AttributeInput!]!

  """Список геологических объектов структуры проекта"""
  domainObjects: [DomainObjectInput!]!

  """Список рисков геологических объектов"""
  risks: [RiskInput!]!
}

type Query {
  """Пространство имен для работы с проектом."""
  project: ProjectQueries

  """Пространство имен для работы с распределениями."""
  distribution: DistributionQueries
}

type Risk {
  """Кодовое обозначение риска"""
  code: String!

  """Наименование риска"""
  name: String!
}

input RiskInput {
  """Кодовое обозначение риска"""
  code: String!

  """Наименование риска"""
  name: String!
}

"""
Ошибка данных таблицы с информацией о расположении строк или ячеек повлекших ошибку.
"""
type TableError implements ErrorInterface {
  """Код ошибки, соответствующий человекочитаемому сообщению об ошибке"""
  code: ErrorCodes!

  """
  Сообщение об ошибке. Отображается в случае отсутствия соответствующего коду человекочитаемого сообщения на клиенте
  """
  message: String!

  """Имя таблицы, содержащей строки или ячейки, повлекшие ошибку"""
  tableName: String

  """Индекс ячейки в строке таблицы, повлекшей ошибку"""
  column: Int

  """Индекс строки таблицы, повлекшей ошибку"""
  row: Int
}

type TableErrors {
  errors: [TableError!]!
}

union UpdateRiskValueResult = GCoSCalculationResult | DetailError

