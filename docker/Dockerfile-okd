# copied from https://stash-gpn.nexign.com/projects/PROJTMPL/repos/react-template
#
#########################
### build environment ###
#########################
ARG APP_DIR=/usr/src/app
ARG NPM_CONFIG_REGISTRY
ARG SASS_BINARY_SITE

# base image
FROM rh-registry.gazprom-neft.local:5000/ubi7/ubi as node
ARG APP_DIR
ARG NPM_CONFIG_REGISTRY=http://nexus.gazprom-neft.local:8080/repository/npm-test/
ARG NPM_LOGIN
ARG NPM_PASSWORD
ARG SASS_BINARY_SITE=http://nexus.gazprom-neft.local:8080/repository/local-repo/npm/node-sass

#instal nodejs and npm
RUN yum -y update && yum -y install  rh-nodejs12-npm

SHELL [ "/usr/bin/scl", "enable", "rh-nodejs12" ]


# set working directory
RUN mkdir -p ${APP_DIR}
WORKDIR ${APP_DIR}

# add `${APP_DIR}/node_modules/.bin` to $PATH
ENV PATH ${APP_DIR}/node_modules/.bin:$PATH

# install and cache app dependencies
COPY package*.json ${APP_DIR}/

# Если необходима аутентифиакация, например есть приватные пакеты во внутреннем репозитории,
# то необходимо испрльзовать блок аутентификации
# при этом registry используется из NPM_CONFIG_REGISTRY
RUN echo _auth=$(echo -n "$NPM_LOGIN:$NPM_PASSWORD" | base64 | tr -d \\n) >> .npmrc && \
	echo always-auth=true >> .npmrc && \
# sleep используется, т.е. есть проблемы с подхватыванием данных аутентификации в artifactory.
	sleep 1 && \
	npm i && \
	rm -f .npmrc

# add app
COPY . ${APP_DIR}

# run tests
#RUN npm run lint:ts && \
#    npm run lint:scss

# generate build
RUN npm run build

##################
### production ###
##################

# base image
FROM rh-registry.gazprom-neft.local:5000/rhscl/nginx-116-rhel7
USER 2001
ARG APP_DIR

ENV LISTEN_PORT=8080 \
	BACKEND_API=http://localhost:5005

# copy artifact build from the 'build environment'
COPY --chown=2001:0 --from=node ${APP_DIR}/build /opt/app-root/www/
COPY --chown=2001:0 --from=node ${APP_DIR}/nginx/nginx.conf /etc/opt/rh/rh-nginx116/nginx/nginx.conf
COPY --chown=2001:0 --from=node ${APP_DIR}/nginx/app-nginx.tpl.conf /opt/app-root/etc/app-nginx.tpl.conf

# expose port
EXPOSE ${LISTEN_PORT}

# run nginx
CMD ["/bin/sh" , "-c" , "envsubst '$BACKEND_API $LISTEN_PORT' < \
/opt/app-root/etc/app-nginx.tpl.conf > \
/opt/app-root/etc/nginx.d/app.conf && \
exec nginx -g 'daemon off;'"]

